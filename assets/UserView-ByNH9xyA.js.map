{"version":3,"file":"UserView-ByNH9xyA.js","sources":["../../src/components/utilities/ServiceCard.vue","../../src/views/UserView.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\n/**\r\n * This component is used to show the service card\r\n * in the application\r\n *\r\n * @prop data\r\n * (ServiceCardI) This prop is used to show the data of the service card\r\n * from interface ServiceCardI (/src/interface/serviceCards.ts)\r\n *\r\n * @requires useRouter\r\n * This is used to get the router instance for\r\n * navigation in the application\r\n */\r\n\r\n//Vue imports\r\n\r\n//Vue Router imports\r\nimport { useRouter } from 'vue-router'\r\n\r\n//Stores imports\r\n\r\n//Models imports\r\nimport type { ServiceCardI } from '@/interface/serviceCards'\r\n\r\n//Views imports\r\n\r\n//Services imports\r\n\r\nconst router = useRouter()\r\n\r\n/**\r\n * This function is used to redirect to the route\r\n * of the service card\r\n */\r\nconst redirectTo = () => {\r\n  router.push({ name: data.route })\r\n}\r\n\r\nconst data = defineProps<ServiceCardI>()\r\n</script>\r\n<template>\r\n  <div class=\"card hover:shadow cursor-pointer\" @click=\"redirectTo\">\r\n    <div class=\"icon\">\r\n      <i class=\"bi\" :class=\"data.icon\"></i>\r\n    </div>\r\n    <div class=\"title\">\r\n      <p class=\"font-bold\">{{ data.title }}</p>\r\n    </div>\r\n    <div class=\"description\">\r\n      <p>{{ data.description }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 30rem;\r\n  min-width: 20rem;\r\n  .icon {\r\n    font-size: 2rem;\r\n  }\r\n  .title {\r\n    margin-top: 1rem;\r\n    p {\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\n/**\r\n * In this file, you will find the logic for the UserView component.\r\n *\r\n * This component is responsible for showing the user home.\r\n *\r\n * @requires onBeforeMount\r\n * This Hook is used to call the getUser function before the component is mounted.\r\n *\r\n * @requires ref\r\n * This function is used to create a reactive reference.\r\n *\r\n * @requires useRouter\r\n * This function is used to get the router instance,\r\n * to navigate to the welcome page if the user is not logged in.\r\n *\r\n * @requires useStoreUser\r\n * This function is used to get the user store.\r\n *\r\n * @requires autService\r\n * This service is used to interact with the API to get the user data.\r\n */\r\n\r\n//Vue imports\r\nimport { onBeforeMount, ref } from 'vue'\r\n\r\n//Vue Router imports\r\nimport { useRouter } from 'vue-router'\r\n\r\n//Stores imports\r\nimport { useStoreUser } from '@/stores/user'\r\n\r\n//Models imports\r\n\r\n//Views imports\r\nimport ServiceCard from '@/components/utilities/ServiceCard.vue'\r\n\r\n//Services imports\r\nimport { autService } from '@/services/user/login'\r\n\r\n// Variable to store if the page is loading\r\nconst userStore = useStoreUser()\r\n\r\n// Variable to store if the page is loading\r\nconst loadingView = ref(true)\r\n\r\n// Variable to instance the router\r\nconst router = useRouter()\r\n\r\n/**\r\n * Function to get the user data, if the user is not logged in, it will redirect to the welcome page\r\n *\r\n * This function calls the service to get the user data\r\n * and if the user is not logged in, it will redirect to the welcome page\r\n *\r\n */\r\nonBeforeMount(async () => {\r\n  try {\r\n    await autService.getUser()\r\n  } catch (error) {\r\n    // If the user is not logged in, it will redirect to the welcome page\r\n    window.localStorage.removeItem('userData')\r\n    router.push({ name: 'welcome' })\r\n  } finally {\r\n    loadingView.value = false\r\n  }\r\n})\r\n</script>\r\n<template>\r\n  <main class=\"container mx-auto pt-5\">\r\n    <div v-if=\"!loadingView\">\r\n      <div class=\"home mb-3\">\r\n        <!-- Link to redirect to the home page -->\r\n        <router-link to=\"/\">\r\n          <i class=\"bi bi-house-fill\"></i>\r\n          Inicio\r\n        </router-link>\r\n      </div>\r\n      <div class=\"header\">\r\n        <!-- Title of the page -->\r\n        <h1 class=\"font-bold\">Hola, {{ userStore.state.firstName }}</h1>\r\n      </div>\r\n      <div class=\"spacer h-[5rem]\"></div>\r\n      <!-- Services section -->\r\n      <h2 class=\"mb-5\">Servicios</h2>\r\n      <div class=\"content flex flex-wrap items-center justify-start gap-20\">\r\n        <!-- Service for the user to see the packages -->\r\n        <ServiceCard\r\n          title=\"Paquetes\"\r\n          icon=\"bi-box2\"\r\n          description=\"Visualiza todos tus paquetes\"\r\n          route=\"packages\"\r\n        ></ServiceCard>\r\n        <!-- Service for the user to create a new package -->\r\n        <ServiceCard\r\n          title=\"Nuevo Paquete\"\r\n          icon=\"bi-person\"\r\n          description=\"Crea un nuevo paquete\"\r\n          route=\"new-package\"\r\n        ></ServiceCard>\r\n        <!-- Service for the user to see the statistics -->\r\n        <ServiceCard\r\n          title=\"Rastrear Paquete\"\r\n          icon=\"bi-person\"\r\n          description=\"Mira la ruta de tu paquete\"\r\n          route=\"track-package\"\r\n        ></ServiceCard>\r\n      </div>\r\n    </div>\r\n    <!-- Section to show the loading message -->\r\n    <div v-else>Cargando...</div>\r\n  </main>\r\n</template>\r\n\r\n<style scoped>\r\n.home {\r\n  font-size: 1.6rem;\r\n}\r\n</style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AA4BA,UAAM,SAAS;AAMf,UAAM,aAAa,MAAM;AACvB,aAAO,KAAK,EAAE,MAAM,KAAK,MAAO,CAAA;AAAA,IAAA;AAGlC,UAAM,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,UAAM,YAAY;AAGZ,UAAA,cAAc,IAAI,IAAI;AAG5B,UAAM,SAAS;AASf,kBAAc,YAAY;AACpB,UAAA;AACF,cAAM,WAAW;eACV,OAAO;AAEP,eAAA,aAAa,WAAW,UAAU;AACzC,eAAO,KAAK,EAAE,MAAM,UAAW,CAAA;AAAA,MAAA,UAC/B;AACA,oBAAY,QAAQ;AAAA,MACtB;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}